#!/bin/bash
#
# __copy1__
# __copy2__
#
CMD=`basename $0`

eval $(ku-distroenv)

usage()
{
	echo "
usage: $CMD [-x] [--debug] [distro(s)]

distro:
  . default distro is the installed one ($DISTRIB_CODENAME)
  . you can use ALL or --all to process all distros

* purge old version files from \$PRJ/pkgs dir
* use -x to execute (default is show only actions)
" >&2
	exit 1
}


cleanup()
{
	rm -f $tmp
}


# (MAIN)

f_exec=false
f_all=false
distros=
DEBUG=false

while [ $# != 0 ]
do
  case $1 in
    -x)		f_exec=true ;;
    -a|--all)	f_all=true ;;
    ALL)	f_all=true ;;
    -D|--debug)	DEBUG=true ;;
    -*|"")	usage ;;
    *)		distros="$distros $1" ;;
  esac
  shift
done

[ -d $PRJ/pkgs ] || {
	echo "directory $PRJ/pkgs not found, abort" >&2
	exit 1
}
cd $PRJ/pkgs || exit $?


$f_all && {
	[ "$distros" != "" ] && usage
	distros=`ls`
}

[ "$distros" == "" ] && distros=$DISTRIB_CODENAME

tmp=`mktemp /tmp/$CMD-XXXXXXXXX`

trap "echo '*INTR*'; cleanup; exit 255" 1 2 3

cd $PRJ/pkgs || {
	cleanup
	exit $?
}

for distro in $distros
do
	cd $distro || exit $?
	echo "purging \$PRJ/pkgs/$distro dir ..."

	cp /dev/null $tmp

	for file in `ls -t *.deb 2>/dev/null`
	do
		eval `jtdeb-version $file`
		echo $pkg_name >>$tmp
		grep -q "^$pkg_name $pkg_arch$" $tmp && {
			files="pkgs/$distro/$file\n`(cd $PRJ; find target/dists/$distro -name $file)`"
			set `echo -en "$files" | wc -l`
			echo " purge $file -- $1 file(s)"
			files=`echo -e $files`
			$DEBUG && {
				echo "D> rm -f $files"
			}
			$f_exec && {
				(cd $PRJ ; rm -f $files)
			}
			continue
		}
		echo "$pkg_name $pkg_arch" >>$tmp
	done
	cd ..
done

cleanup
exit 0
